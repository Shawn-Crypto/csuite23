{
  "introduction": "Conversions API is a Facebook Business Tool that lets you share key web and offline events, or customer actions, directly from your server to Facebook's. Conversions API works with your Facebook pixel to help improve the performance and measurement of your Facebook ad campaigns. A direct Conversions API integration is a great choice for businesses that have developer resources available, access to their server codebase, and need the ability to customize their configuration, control what data they share to Facebook and when they share it.",
  "preparation": {
    "facebook_pixel": "Make sure you have the Facebook pixel correctly implemented in your website. We recommend that you use the same pixel for your browser and server events.",
    "business_manager": "To use the Conversions API, you need a Business Manager account. Business Manager is a Facebook tool that helps you organize and manage your business. If you don't have a Business Manager account, you can create one at business.facebook.com/overview.",
    "access_token": "To use the Conversions API, you need an access token, which is passed as a parameter in each API call. You can generate an access token through Events Manager (recommended) or, if you already have your own app and your own system user, you can generate an access token inside Business Manager. For either option, there is no need to go through App Review or to request any permissions. Option A (Recommended): Generate access token in Events Manager. 1. Choose a pixel (we recommend starting with the pixel and main event you use for optimization). 2. Navigate to 'Settings' > 'Conversions API' > 'Set up manually' > 'Generate access token' link. Option B: Generate access token in Business Manager. 1. Go to your Business' Settings. 2. Assign a pixel to your system user (you also have an option to create a new system user at this stage). 3. Select the assigned system user and click Generate Token."
  },
  "implementation_steps": [
    {
      "step_number": 1,
      "title": "Go to Events Manager",
      "description": "Start by sending a test event to the API. To create your payload from the Payload Helper tool, add your pixel ID under 'Test this Payload' and click on Send to Test Events. You should be able to see the event on Events Manager > Your Pixel > Test Events. Once you are satisfied with your payload, decide how to make your call. You can use our Graph API Explorer or cURL. Independently on your call method, you should call the /{pixel_id}/events endpoint and attach the JSON data generated by the Payload Helper tool."
    },
    {
      "step_number": 2,
      "title": "Send events",
      "description": "To send events from your server, make a POST request to this API's /events edge from this path: https://graph.facebook.com/{API_VERSION}/{PIXEL_ID}/events?access_token={TOKEN}. When you post to this edge, Facebook creates new server events. Attach your generated secure access token using the access_token query parameter to the request. You can also use Graph API Explorer to POST to the /<pixel_id>/events endpoint for testing purposes. You can batch up to 1,000 events in data. We recommend sending events in real time as soon as they occur, or ideally within an hour. If any event you send in a batch is invalid, we reject the entire batch. The delay between event_time and the time you send to Facebook should be as close to 0 as possible, and no longer than 7 days. We recommend retrying the request in cases where the HTTP response indicates a non-client error, such as a timeout. Set a timeout of 1500 milliseconds on the request."
    },
    {
      "step_number": null,
      "title": "Send requests",
      "description": "See the Facebook documentation for how to send requests using the Conversions API: https://developers.facebook.com/docs/marketing-api/conversions-api/using-the-api#send"
    },
    {
      "step_number": null,
      "title": "Batch Requests",
      "description": "See the Facebook documentation for how to use batch requests with the Conversions API: https://developers.facebook.com/docs/marketing-api/conversions-api/using-the-api#batch-requests"
    }
  ],
  "parameters": {
    "required_parameters": [
      {
        "name": "client_user_agent",
        "hashing": "Do not hash",
        "description": "The user_agent parameter is a field that identifies the web browser (i.e. Safari, Chrome, Firefox, etc.) on which a website event occurred"
      },
      {
        "name": "event_source_url",
        "hashing": "",
        "description": "The event_source_url is a field that identifies the website URL where a website event occurred. It is most appropriately set as the specific page of a specific website where the event occurred"
      },
      {
        "name": "action_source",
        "hashing": "",
        "description": "The action_source parameter is a field that identifies where the event occurred (i.e. website, email, phone call, store, etc.)"
      }
    ],
    "recommended_parameters": [
      {
        "name": "external_id",
        "hashing": "Hashing recommended",
        "description": "external_id is a string that represents a user on an advertiser's system, like loyalty membership IDs, user IDs, and external cookie IDs. You can send one or more external_ IDs for a given event and we try to match it to someone on Facebook"
      },
      {
        "name": "event_id",
        "hashing": "",
        "description": "This ID can be any unique string chosen by the advertiser. event_id is used to deduplicate events sent by both Facebook Pixel and Conversions API. event_name is also used in deduplication"
      },
      {
        "name": "em",
        "hashing": "Hashing needed",
        "description": "Email address"
      },
      {
        "name": "ph",
        "hashing": "Hashing needed",
        "description": "Phone number"
      },
      {
        "name": "ge",
        "hashing": "Hashing needed",
        "description": "Gender"
      },
      {
        "name": "db",
        "hashing": "Hashing needed",
        "description": "Date of Birth"
      },
      {
        "name": "fn",
        "hashing": "Hashing needed",
        "description": "First name"
      },
      {
        "name": "ln",
        "hashing": "Hashing needed",
        "description": "Last name"
      },
      {
        "name": "ct",
        "hashing": "Hashing needed",
        "description": "City"
      },
      {
        "name": "st",
        "hashing": "Hashing needed",
        "description": "State"
      },
      {
        "name": "zp",
        "hashing": "Hashing needed",
        "description": "Zip"
      },
      {
        "name": "country",
        "hashing": "Hashing needed",
        "description": "Country"
      },
      {
        "name": "client_ip_address",
        "hashing": "Do not hash",
        "description": "Client IP address"
      },
      {
        "name": "fbc",
        "hashing": "Do not hash",
        "description": "Click ID"
      },
      {
        "name": "fbp",
        "hashing": "Do not hash",
        "description": "Browser ID"
      },
      {
        "name": "subscription_id",
        "hashing": "Do not hash",
        "description": "Subscription ID"
      },
      {
        "name": "lead_id",
        "hashing": "Do not hash",
        "description": "Lead ID"
      },
      {
        "name": "fb_login_id",
        "hashing": "Do not hash",
        "description": "FB Login ID"
      }
    ]
  },
  "deduplication": [
    {
      "option_name": "Option A (Recommended)",
      "method": "Events received within 48 hours of one another containing the same event_name, same event_id and sent to the same pixel ID are considered duplicates, and we discard the latter of the two.",
      "keys": [
        "event_name",
        "event_id"
      ]
    },
    {
      "option_name": "Option B",
      "method": "You must use event_name along with the fbp and/or external_id consistently across browser and server events. A browser event must arrive first and if a server event is received before the corresponding browser event, it may be double counted.",
      "keys": [
        "event_name",
        "fbp and/or external_id",
        "event_time"
      ]
    },
    {
      "option_name": "Event Deduplication Options",
      "method": "See the Facebook documentation for deduplication options and best practices: https://developers.facebook.com/docs/marketing-api/conversions-api/deduplicate-pixel-and-server-events",
      "keys": [
        
      ]
    }
  ],
  "testing_and_verification": {
    "testing_events": "Go to Events Manager > Data Sources > Your Pixel > Test Events. The Test Events tool generates a test ID. Send the test ID as a test_event_code parameter to start seeing event activity appear in the Test Events window. See the Facebook documentation for using the Test Events tool: https://www.facebook.com/business/help/ServerTestEventsTool",
    "verifying_events": "Go to Events Manager > Data Sources > click on the pixel corresponding to the PIXEL_ID in your POST request. For each pixel, go to Overview > Events > Connection Method. Under 'Connection Method,' you'll see 'Browser,' 'Server' or 'Browser + Server'. Click on each event to see more details and recent activity, such as: Aggregated event parameters, Percent of Events received, and from which connection method (Pixel or Conversions API), Events processed or ignored from each connection method, Event Match Quality score (out of 10), including how it's calculated and used, and tips for increasing it. See the Facebook documentation for navigating Events Manager for Facebook Pixel and Conversions API: https://www.facebook.com/business/help/EventsManagerforWeb"
  },
  "troubleshooting": [
    {
      "diagnostic_message": "Event delay from server",
      "context": "Your server is sending events more than 24 hours after the actual event has occurred",
      "resolution": "Send events as close to real-time as possible."
    },
    {
      "diagnostic_message": "Same event ID received for many event instances",
      "context": "Your pixel or server has used the same Event ID multiple times",
      "resolution": "Use unique Event IDs for each event."
    },
    {
      "diagnostic_message": "Server External ID Not Matching to Pixel External ID for Event",
      "context": "The External ID provided in the pixel does not match any sent via the Server",
      "resolution": "Use consistent External ID across browser & server events."
    }
  ],
  "optimal_configuration": [
    {
      "criteria_name": "Event redundancy",
      "description": "The portion of browser events that are shared with a 'browser + server' connection method",
      "ideal_value": "at least 90%"
    },
    {
      "criteria_name": "Event deduplication",
      "description": "The portion of redundant events that are effectively identified with identical event names and event IDs, external IDs or Facebook Browser IDs",
      "ideal_value": "at least 50%"
    },
    {
      "criteria_name": "Data freshness",
      "description": "How long ago your event occurred",
      "ideal_value": "0 minutes, i.e. real time, and no longer than 7 days"
    },
    {
      "criteria_name": "Event Match Quality (EMQ)",
      "description": "A score that indicates how effective your event's customer information may be at matching it to a Facebook account",
      "ideal_value": "6.0 or higher"
    }
  ]
}